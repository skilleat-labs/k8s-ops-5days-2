# PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: day2-logs-pvc
  namespace: day2-ops
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Web Pod (InitContainer + Nginx)
apiVersion: v1
kind: Pod
metadata:
  name: log-web
  namespace: day2-ops
  labels:
    app: log-web
spec:
  volumes:
  - name: shared-logs
    persistentVolumeClaim:
      claimName: day2-logs-pvc
  initContainers:
  - name: init-index
    image: busybox:1.36
    command:
    - sh
    - -c
    - |
      cat > /data/index.html <<'EOF'
<meta charset="UTF-8">
<meta http-equiv="refresh" content="5">
<h2>Live Cron Logs</h2>
<p>페이지는 5초마다 자동 새로고침됩니다.</p>
<hr>
EOF
    volumeMounts:
    - name: shared-logs
      mountPath: /data
  containers:
  - name: nginx
    image: nginx:1.25
    ports:
    - containerPort: 80
    volumeMounts:
    - name: shared-logs
      mountPath: /usr/share/nginx/html
---
# Service (NodePort)
apiVersion: v1
kind: Service
metadata:
  name: log-web-svc
  namespace: day2-ops
spec:
  type: NodePort
  selector:
    app: log-web
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30090
---
# CronJob (append logs every minute)
apiVersion: batch/v1
kind: CronJob
metadata:
  name: log-writer
  namespace: day2-ops
spec:
  schedule: "*/1 * * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          volumes:
          - name: shared-logs
            persistentVolumeClaim:
              claimName: day2-logs-pvc
          containers:
          - name: writer
            image: busybox:1.36
            command:
            - sh
            - -c
            - |
              d=$(date '+%Y-%m-%d %H:%M:%S')
              echo "<p>Cron fired at ${d}</p>" >> /var/logs/index.html
            volumeMounts:
            - name: shared-logs
              mountPath: /var/logs

